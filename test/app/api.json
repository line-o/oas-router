{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Custom API",
        "description": "This is the place to add your own path endpoints"
    },
    "servers": [
        {
            "description": "Endpoint for testing on localhost",
            "url": "http://localhost:8080/exist/apps/roasted"
        }
    ],
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "name": "teipublisher.com.login",
                "in": "cookie"
            }
        }
    },
    "paths": {
        "/api/parameters": {
            "get": {
                "summary": "Test various parameter types passed in a GET",
                "operationId": "rutil:debug",
                "parameters": [
                    {
                        "name": "num",
                        "in": "query",
                        "schema":{
                            "type": "number"
                        }
                    },
                    {
                        "name": "int",
                        "in": "query",
                        "schema":{
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bool",
                        "in": "query",
                        "schema":{
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "string",
                        "in": "query",
                        "schema":{
                            "type": "string"
                        }
                    },
                    {
                        "name": "defaultParam",
                        "in": "query",
                        "schema":{
                            "type": "string",
                            "default": "abcdefg"
                        }
                    },
                    {
                        "name": "X-start",
                        "in": "header",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200":{
                        "description": "JSON dump of request",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Test various parameter types passed in a POST",
                "operationId": "rutil:debug",
                "parameters": [
                    {
                        "name": "num",
                        "in": "query",
                        "schema":{
                            "type": "number"
                        }
                    },
                    {
                        "name": "int",
                        "in": "query",
                        "schema":{
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bool",
                        "in": "query",
                        "schema":{
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "string",
                        "in": "query",
                        "schema":{
                            "type": "string"
                        }
                    },
                    {
                        "name": "defaultParam",
                        "in": "query",
                        "schema":{
                            "type": "string",
                            "default": "abcdefg"
                        }
                    },
                    {
                        "name": "X-start",
                        "in": "header",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200":{
                        "description": "JSON dump of request",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dates": {
            "get": {
                "summary": "Parameters sent with GET request",
                "operationId": "api:date",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "schema":{
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "dateTime",
                        "in": "query",
                        "schema":{
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200":{
                        "description": "JSON dump of request",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/paths/{path}":{
            "get": {
                "summary": "Parameter specified in last path component",
                "operationId": "rutil:debug",
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "required": true,
                        "schema":{
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200":{
                        "description": "JSON dump of request",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
            
        },
        "/api/$op-er+ation*!":{
            "get": {
                "summary": "Get path using a $ character",
                "operationId": "rutil:debug",
                "responses": {
                    "200":{
                        "description": "JSON dump of request",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post to path using a $ character",
                "operationId": "rutil:debug",
                "responses": {
                    "200":{
                        "description": "JSON dump of request",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/errors": {
            "get": {
                "summary": "Reports an error via fn:error function",
                "operationId": "api:error-triggered",
                "responses": {
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Reports a dynamic XQuery error",
                "operationId": "api:error-dynamic",
                "responses": {
                    "500": {
                        "description": "XQuery error",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Reports an explicit error",
                "operationId": "api:error-explicit",
                "responses": {
                    "500": {
                        "description": "XQuery error",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/errors/handle": {
            "get": {
                "summary": "Test error handler",
                "operationId": "api:error-dynamic",
                "x-error-handler": "api:handle-error",
                "responses": {
                    "500": {
                        "description": "XQuery error",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "cookieAuth": []
        },
        {
            "basicAuth": []
        }
    ]
}